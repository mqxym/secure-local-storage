{
  "version": 3,
  "sources": ["node:path", "../../node_modules/argon2-browser/dist/argon2.js", "../../node_modules/argon2-browser/lib/argon2.js", "../../src/constants.ts", "../../src/errors.ts", "../../src/utils/base64.ts", "../../src/crypto/EncryptionManager.ts", "../../src/crypto/DeviceKeyProvider.ts", "../../src/crypto/KeyDerivation.ts", "../../src/crypto/SessionKeyCache.ts", "../../src/storage/StorageService.ts", "../../src/utils/json.ts", "../../src/utils/secureDataView.ts", "../../src/api/SecureLocalStorage.ts", "../../src/index.ts"],
  "sourcesContent": [
    "function assertPath(path){if(typeof path!==\"string\")throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(path))}function normalizeStringPosix(path,allowAboveRoot){var res=\"\",lastSegmentLength=0,lastSlash=-1,dots=0,code;for(var i=0;i<=path.length;++i){if(i<path.length)code=path.charCodeAt(i);else if(code===47)break;else code=47;if(code===47){if(lastSlash===i-1||dots===1);else if(lastSlash!==i-1&&dots===2){if(res.length<2||lastSegmentLength!==2||res.charCodeAt(res.length-1)!==46||res.charCodeAt(res.length-2)!==46){if(res.length>2){var lastSlashIndex=res.lastIndexOf(\"/\");if(lastSlashIndex!==res.length-1){if(lastSlashIndex===-1)res=\"\",lastSegmentLength=0;else res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf(\"/\");lastSlash=i,dots=0;continue}}else if(res.length===2||res.length===1){res=\"\",lastSegmentLength=0,lastSlash=i,dots=0;continue}}if(allowAboveRoot){if(res.length>0)res+=\"/..\";else res=\"..\";lastSegmentLength=2}}else{if(res.length>0)res+=\"/\"+path.slice(lastSlash+1,i);else res=path.slice(lastSlash+1,i);lastSegmentLength=i-lastSlash-1}lastSlash=i,dots=0}else if(code===46&&dots!==-1)++dots;else dots=-1}return res}function _format(sep,pathObject){var dir=pathObject.dir||pathObject.root,base=pathObject.base||(pathObject.name||\"\")+(pathObject.ext||\"\");if(!dir)return base;if(dir===pathObject.root)return dir+base;return dir+sep+base}function resolve(){var resolvedPath=\"\",resolvedAbsolute=!1,cwd;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path;if(i>=0)path=arguments[i];else{if(cwd===void 0)cwd=process.cwd();path=cwd}if(assertPath(path),path.length===0)continue;resolvedPath=path+\"/\"+resolvedPath,resolvedAbsolute=path.charCodeAt(0)===47}if(resolvedPath=normalizeStringPosix(resolvedPath,!resolvedAbsolute),resolvedAbsolute)if(resolvedPath.length>0)return\"/\"+resolvedPath;else return\"/\";else if(resolvedPath.length>0)return resolvedPath;else return\".\"}function normalize(path){if(assertPath(path),path.length===0)return\".\";var isAbsolute=path.charCodeAt(0)===47,trailingSeparator=path.charCodeAt(path.length-1)===47;if(path=normalizeStringPosix(path,!isAbsolute),path.length===0&&!isAbsolute)path=\".\";if(path.length>0&&trailingSeparator)path+=\"/\";if(isAbsolute)return\"/\"+path;return path}function isAbsolute(path){return assertPath(path),path.length>0&&path.charCodeAt(0)===47}function join(){if(arguments.length===0)return\".\";var joined;for(var i=0;i<arguments.length;++i){var arg=arguments[i];if(assertPath(arg),arg.length>0)if(joined===void 0)joined=arg;else joined+=\"/\"+arg}if(joined===void 0)return\".\";return normalize(joined)}function relative(from,to){if(assertPath(from),assertPath(to),from===to)return\"\";if(from=resolve(from),to=resolve(to),from===to)return\"\";var fromStart=1;for(;fromStart<from.length;++fromStart)if(from.charCodeAt(fromStart)!==47)break;var fromEnd=from.length,fromLen=fromEnd-fromStart,toStart=1;for(;toStart<to.length;++toStart)if(to.charCodeAt(toStart)!==47)break;var toEnd=to.length,toLen=toEnd-toStart,length=fromLen<toLen?fromLen:toLen,lastCommonSep=-1,i=0;for(;i<=length;++i){if(i===length){if(toLen>length){if(to.charCodeAt(toStart+i)===47)return to.slice(toStart+i+1);else if(i===0)return to.slice(toStart+i)}else if(fromLen>length){if(from.charCodeAt(fromStart+i)===47)lastCommonSep=i;else if(i===0)lastCommonSep=0}break}var fromCode=from.charCodeAt(fromStart+i),toCode=to.charCodeAt(toStart+i);if(fromCode!==toCode)break;else if(fromCode===47)lastCommonSep=i}var out=\"\";for(i=fromStart+lastCommonSep+1;i<=fromEnd;++i)if(i===fromEnd||from.charCodeAt(i)===47)if(out.length===0)out+=\"..\";else out+=\"/..\";if(out.length>0)return out+to.slice(toStart+lastCommonSep);else{if(toStart+=lastCommonSep,to.charCodeAt(toStart)===47)++toStart;return to.slice(toStart)}}function _makeLong(path){return path}function dirname(path){if(assertPath(path),path.length===0)return\".\";var code=path.charCodeAt(0),hasRoot=code===47,end=-1,matchedSlash=!0;for(var i=path.length-1;i>=1;--i)if(code=path.charCodeAt(i),code===47){if(!matchedSlash){end=i;break}}else matchedSlash=!1;if(end===-1)return hasRoot?\"/\":\".\";if(hasRoot&&end===1)return\"//\";return path.slice(0,end)}function basename(path,ext){if(ext!==void 0&&typeof ext!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(path);var start=0,end=-1,matchedSlash=!0,i;if(ext!==void 0&&ext.length>0&&ext.length<=path.length){if(ext.length===path.length&&ext===path)return\"\";var extIdx=ext.length-1,firstNonSlashEnd=-1;for(i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){start=i+1;break}}else{if(firstNonSlashEnd===-1)matchedSlash=!1,firstNonSlashEnd=i+1;if(extIdx>=0)if(code===ext.charCodeAt(extIdx)){if(--extIdx===-1)end=i}else extIdx=-1,end=firstNonSlashEnd}}if(start===end)end=firstNonSlashEnd;else if(end===-1)end=path.length;return path.slice(start,end)}else{for(i=path.length-1;i>=0;--i)if(path.charCodeAt(i)===47){if(!matchedSlash){start=i+1;break}}else if(end===-1)matchedSlash=!1,end=i+1;if(end===-1)return\"\";return path.slice(start,end)}}function extname(path){assertPath(path);var startDot=-1,startPart=0,end=-1,matchedSlash=!0,preDotState=0;for(var i=path.length-1;i>=0;--i){var code=path.charCodeAt(i);if(code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1)matchedSlash=!1,end=i+1;if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1}else if(startDot!==-1)preDotState=-1}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1)return\"\";return path.slice(startDot,end)}function format(pathObject){if(pathObject===null||typeof pathObject!==\"object\")throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof pathObject);return _format(\"/\",pathObject)}function parse(path){assertPath(path);var ret={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(path.length===0)return ret;var code=path.charCodeAt(0),isAbsolute2=code===47,start;if(isAbsolute2)ret.root=\"/\",start=1;else start=0;var startDot=-1,startPart=0,end=-1,matchedSlash=!0,i=path.length-1,preDotState=0;for(;i>=start;--i){if(code=path.charCodeAt(i),code===47){if(!matchedSlash){startPart=i+1;break}continue}if(end===-1)matchedSlash=!1,end=i+1;if(code===46){if(startDot===-1)startDot=i;else if(preDotState!==1)preDotState=1}else if(startDot!==-1)preDotState=-1}if(startDot===-1||end===-1||preDotState===0||preDotState===1&&startDot===end-1&&startDot===startPart+1){if(end!==-1)if(startPart===0&&isAbsolute2)ret.base=ret.name=path.slice(1,end);else ret.base=ret.name=path.slice(startPart,end)}else{if(startPart===0&&isAbsolute2)ret.name=path.slice(1,startDot),ret.base=path.slice(1,end);else ret.name=path.slice(startPart,startDot),ret.base=path.slice(startPart,end);ret.ext=path.slice(startDot,end)}if(startPart>0)ret.dir=path.slice(0,startPart-1);else if(isAbsolute2)ret.dir=\"/\";return ret}var sep=\"/\",delimiter=\":\",posix=((p)=>(p.posix=p,p))({resolve,normalize,isAbsolute,join,relative,_makeLong,dirname,basename,extname,format,parse,sep,delimiter,win32:null,posix:null});var path_default=posix;export{sep,resolve,relative,posix,parse,normalize,join,isAbsolute,format,extname,dirname,delimiter,path_default as default,basename,_makeLong};",
    "var Module=typeof self!==\"undefined\"&&typeof self.Module!==\"undefined\"?self.Module:{};var jsModule=Module;var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var arguments_=[];var thisProgram=\"./this.program\";var quit_=function(status,toThrow){throw toThrow};var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;var nodeFS;var nodePath;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=function shell_read(filename,binary){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);return nodeFS[\"readFileSync\"](filename,binary?null:\"utf8\")};readBinary=function readBinary(filename){var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);quit_=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit===\"function\"){quit_=function(status){quit(status)}}if(typeof print!==\"undefined\"){if(typeof console===\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!==\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=function(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=function(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=function(title){document.title=title}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var ALLOC_NORMAL=0;var ALLOC_STACK=1;function allocate(slab,allocator){var ret;if(allocator==ALLOC_STACK){ret=stackAlloc(slab.length)}else{ret=_malloc(slab.length)}if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new Uint8Array(slab),ret)}return ret}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what+=\"\";err(what);ABORT=true;EXITSTATUS=1;what=\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile=\"argon2.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"a\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"c\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"k\"];addOnInit(Module[\"asm\"][\"d\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){var result=WebAssembly.instantiate(binary,info);return result}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){wasmTable.get(func)()}else{wasmTable.get(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function emscripten_realloc_buffer(size){try{wasmMemory.grow(size-buffer.byteLength+65535>>>16);updateGlobalBufferAndViews(wasmMemory.buffer);return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=2147418112;if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var asmLibraryArg={\"a\":_emscripten_memcpy_big,\"b\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"d\"]).apply(null,arguments)};var _argon2_hash=Module[\"_argon2_hash\"]=function(){return(_argon2_hash=Module[\"_argon2_hash\"]=Module[\"asm\"][\"e\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"f\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"g\"]).apply(null,arguments)};var _argon2_verify=Module[\"_argon2_verify\"]=function(){return(_argon2_verify=Module[\"_argon2_verify\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _argon2_error_message=Module[\"_argon2_error_message\"]=function(){return(_argon2_error_message=Module[\"_argon2_error_message\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _argon2_encodedlen=Module[\"_argon2_encodedlen\"]=function(){return(_argon2_encodedlen=Module[\"_argon2_encodedlen\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var _argon2_hash_ext=Module[\"_argon2_hash_ext\"]=function(){return(_argon2_hash_ext=Module[\"_argon2_hash_ext\"]=Module[\"asm\"][\"l\"]).apply(null,arguments)};var _argon2_verify_ext=Module[\"_argon2_verify_ext\"]=function(){return(_argon2_verify_ext=Module[\"_argon2_verify_ext\"]=Module[\"asm\"][\"m\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"n\"]).apply(null,arguments)};Module[\"allocate\"]=allocate;Module[\"UTF8ToString\"]=UTF8ToString;Module[\"ALLOC_NORMAL\"]=ALLOC_NORMAL;var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();if(typeof module!==\"undefined\")module.exports=Module;Module.unloadRuntime=function(){if(typeof self!==\"undefined\"){delete self.Module}Module=jsModule=wasmMemory=wasmTable=asm=buffer=HEAP8=HEAPU8=HEAP16=HEAPU16=HEAP32=HEAPU32=HEAPF32=HEAPF64=undefined;if(typeof module!==\"undefined\"){delete module.exports}};\n",
    "(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.argon2 = factory();\n    }\n})(typeof self !== 'undefined' ? self : this, function () {\n    const global = typeof self !== 'undefined' ? self : this;\n\n    /**\n     * @enum\n     */\n    const ArgonType = {\n        Argon2d: 0,\n        Argon2i: 1,\n        Argon2id: 2,\n    };\n\n    function loadModule(mem) {\n        if (loadModule._promise) {\n            return loadModule._promise;\n        }\n        if (loadModule._module) {\n            return Promise.resolve(loadModule._module);\n        }\n        let promise;\n        if (\n            global.process &&\n            global.process.versions &&\n            global.process.versions.node\n        ) {\n            promise = loadWasmModule().then(\n                (Module) =>\n                    new Promise((resolve) => {\n                        Module.postRun = () => resolve(Module);\n                    })\n            );\n        } else {\n            promise = loadWasmBinary().then((wasmBinary) => {\n                const wasmMemory = mem ? createWasmMemory(mem) : undefined;\n                return initWasm(wasmBinary, wasmMemory);\n            });\n        }\n        loadModule._promise = promise;\n        return promise.then((Module) => {\n            loadModule._module = Module;\n            delete loadModule._promise;\n            return Module;\n        });\n    }\n\n    function initWasm(wasmBinary, wasmMemory) {\n        return new Promise((resolve) => {\n            global.Module = {\n                wasmBinary,\n                wasmMemory,\n                postRun() {\n                    resolve(Module);\n                },\n            };\n            return loadWasmModule();\n        });\n    }\n\n    function loadWasmModule() {\n        if (global.loadArgon2WasmModule) {\n            return global.loadArgon2WasmModule();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.js'));\n        }\n        return import('../dist/argon2.js');\n    }\n\n    function loadWasmBinary() {\n        if (global.loadArgon2WasmBinary) {\n            return global.loadArgon2WasmBinary();\n        }\n        if (typeof require === 'function') {\n            return Promise.resolve(require('../dist/argon2.wasm')).then(\n                (wasmModule) => {\n                    return decodeWasmBinary(wasmModule);\n                }\n            );\n        }\n        const wasmPath =\n            global.argon2WasmPath ||\n            'node_modules/argon2-browser/dist/argon2.wasm';\n        return fetch(wasmPath)\n            .then((response) => response.arrayBuffer())\n            .then((ab) => new Uint8Array(ab));\n    }\n\n    function decodeWasmBinary(base64) {\n        const text = atob(base64);\n        const binary = new Uint8Array(new ArrayBuffer(text.length));\n        for (let i = 0; i < text.length; i++) {\n            binary[i] = text.charCodeAt(i);\n        }\n        return binary;\n    }\n\n    function createWasmMemory(mem) {\n        const KB = 1024;\n        const MB = 1024 * KB;\n        const GB = 1024 * MB;\n        const WASM_PAGE_SIZE = 64 * KB;\n\n        const totalMemory = (2 * GB - 64 * KB) / WASM_PAGE_SIZE;\n        const initialMemory = Math.min(\n            Math.max(Math.ceil((mem * KB) / WASM_PAGE_SIZE), 256) + 256,\n            totalMemory\n        );\n\n        return new WebAssembly.Memory({\n            initial: initialMemory,\n            maximum: totalMemory,\n        });\n    }\n\n    function allocateArray(Module, arr) {\n        return Module.allocate(arr, 'i8', Module.ALLOC_NORMAL);\n    }\n\n    function allocateArrayStr(Module, arr) {\n        const nullTerminatedArray = new Uint8Array([...arr, 0]);\n        return allocateArray(Module, nullTerminatedArray);\n    }\n\n    function encodeUtf8(str) {\n        if (typeof str !== 'string') {\n            return str;\n        }\n        if (typeof TextEncoder === 'function') {\n            return new TextEncoder().encode(str);\n        } else if (typeof Buffer === 'function') {\n            return Buffer.from(str);\n        } else {\n            throw new Error(\"Don't know how to encode UTF8\");\n        }\n    }\n\n    /**\n     * Argon2 hash\n     * @param {string|Uint8Array} params.pass - password string\n     * @param {string|Uint8Array} params.salt - salt string\n     * @param {number} [params.time=1] - the number of iterations\n     * @param {number} [params.mem=1024] - used memory, in KiB\n     * @param {number} [params.hashLen=24] - desired hash length\n     * @param {number} [params.parallelism=1] - desired parallelism\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @return Promise\n     *\n     * @example\n     *  argon2.hash({ pass: 'password', salt: 'somesalt' })\n     *      .then(h => console.log(h.hash, h.hashHex, h.encoded))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Hash(params) {\n        const mCost = params.mem || 1024;\n        return loadModule(mCost).then((Module) => {\n            const tCost = params.time || 1;\n            const parallelism = params.parallelism || 1;\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const saltEncoded = encodeUtf8(params.salt);\n            const salt = allocateArrayStr(Module, saltEncoded);\n            const saltlen = saltEncoded.length;\n            const argon2Type = params.type || ArgonType.Argon2d;\n            const hash = Module.allocate(\n                new Array(params.hashLen || 24),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const hashlen = params.hashLen || 24;\n            const encodedlen = Module._argon2_encodedlen(\n                tCost,\n                mCost,\n                parallelism,\n                saltlen,\n                hashlen,\n                argon2Type\n            );\n            const encoded = Module.allocate(\n                new Array(encodedlen + 1),\n                'i8',\n                Module.ALLOC_NORMAL\n            );\n            const version = 0x13;\n            let err;\n            let res;\n            try {\n                res = Module._argon2_hash_ext(\n                    tCost,\n                    mCost,\n                    parallelism,\n                    pwd,\n                    pwdlen,\n                    salt,\n                    saltlen,\n                    hash,\n                    hashlen,\n                    encoded,\n                    encodedlen,\n                    argon2Type,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    version\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res === 0 && !err) {\n                let hashStr = '';\n                const hashArr = new Uint8Array(hashlen);\n                for (let i = 0; i < hashlen; i++) {\n                    const byte = Module.HEAP8[hash + i];\n                    hashArr[i] = byte;\n                    hashStr += ('0' + (0xff & byte).toString(16)).slice(-2);\n                }\n                const encodedStr = Module.UTF8ToString(encoded);\n                result = {\n                    hash: hashArr,\n                    hashHex: hashStr,\n                    encoded: encodedStr,\n                };\n            } else {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(salt);\n                Module._free(hash);\n                Module._free(encoded);\n                if (ad) {\n                    Module._free(ad);\n                }\n                if (secret) {\n                    Module._free(secret);\n                }\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    /**\n     * Argon2 verify function\n     * @param {string} params.pass - password string\n     * @param {string|Uint8Array} params.encoded - encoded hash\n     * @param {number} [params.type=argon2.ArgonType.Argon2d] - hash type:\n     *      argon2.ArgonType.Argon2d\n     *      argon2.ArgonType.Argon2i\n     *      argon2.ArgonType.Argon2id\n     *\n     * @returns Promise\n     *\n     * @example\n     *  argon2.verify({ pass: 'password', encoded: 'encoded-hash' })\n     *      .then(() => console.log('OK'))\n     *      .catch(e => console.error(e.message, e.code))\n     */\n    function argon2Verify(params) {\n        return loadModule().then((Module) => {\n            const pwdEncoded = encodeUtf8(params.pass);\n            const pwd = allocateArrayStr(Module, pwdEncoded);\n            const pwdlen = pwdEncoded.length;\n            const secret = params.secret\n                ? allocateArray(Module, params.secret)\n                : 0;\n            const secretlen = params.secret ? params.secret.byteLength : 0;\n            const ad = params.ad ? allocateArray(Module, params.ad) : 0;\n            const adlen = params.ad ? params.ad.byteLength : 0;\n            const encEncoded = encodeUtf8(params.encoded);\n            const enc = allocateArrayStr(Module, encEncoded);\n            let argon2Type = params.type;\n            if (argon2Type === undefined) {\n                let typeStr = params.encoded.split('$')[1];\n                if (typeStr) {\n                    typeStr = typeStr.replace('a', 'A');\n                    argon2Type = ArgonType[typeStr] || ArgonType.Argon2d;\n                }\n            }\n            let err;\n            let res;\n            try {\n                res = Module._argon2_verify_ext(\n                    enc,\n                    pwd,\n                    pwdlen,\n                    secret,\n                    secretlen,\n                    ad,\n                    adlen,\n                    argon2Type\n                );\n            } catch (e) {\n                err = e;\n            }\n            let result;\n            if (res || err) {\n                try {\n                    if (!err) {\n                        err = Module.UTF8ToString(\n                            Module._argon2_error_message(res)\n                        );\n                    }\n                } catch (e) {}\n                result = { message: err, code: res };\n            }\n            try {\n                Module._free(pwd);\n                Module._free(enc);\n            } catch (e) {}\n            if (err) {\n                throw result;\n            } else {\n                return result;\n            }\n        });\n    }\n\n    function unloadRuntime() {\n        if (loadModule._module) {\n            loadModule._module.unloadRuntime();\n            delete loadModule._promise;\n            delete loadModule._module;\n        }\n    }\n\n    return {\n        ArgonType,\n        hash: argon2Hash,\n        verify: argon2Verify,\n        unloadRuntime,\n    };\n});\n",
    "export const SLS_CONSTANTS = {\n  CURRENT_DATA_VERSION: 2 as const,\n  // AES-GCM\n  AES: {\n    NAME: \"AES-GCM\" as const,\n    LENGTH: 256 as const,\n    IV_LENGTH: 12 as const // 96-bit nonce\n  },\n  // Argon2 (argon2-browser uses KiB for mem)\n  ARGON2: {\n    TYPE: \"id\" as const, // Argon2id\n    ITERATIONS: 20,\n    MEMORY_KIB: 64 * 1024,\n    PARALLELISM: 1,\n    HASH_LEN: 32 // 256-bit\n  },\n  // Storage\n  STORAGE_KEY: \"secure-local-storage:v2\",\n  // IndexedDB\n  IDB: {\n    DB_NAME: \"SLS_KEYS\",\n    STORE: \"keys\",\n    ID: \"deviceKek_v1\"\n  },\n  // Salt for Argon2\n  SALT_LEN: 16\n};",
    "export class SlsError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"SlsError\";\n  }\n}\n\nexport class ValidationError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ValidationError\";\n  }\n}\n\nexport class LockedError extends SlsError {\n  constructor(message = \"Session locked\") {\n    super(message);\n    this.name = \"LockedError\";\n  }\n}\n\nexport class ModeError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ModeError\";\n  }\n}\n\nexport class StorageFullError extends SlsError {\n  constructor(message = \"localStorage quota exceeded\") {\n    super(message);\n    this.name = \"StorageFullError\";\n  }\n}\n\nexport class CryptoError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"CryptoError\";\n  }\n}\n\nexport class ImportError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ImportError\";\n  }\n}\n\nexport class ExportError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ExportError\";\n  }\n}\n\nexport class NotSupportedError extends SlsError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"NotSupportedError\";\n  }\n}",
    "export function bytesToBase64(bytes: ArrayBuffer | Uint8Array): string {\n  const u8 = bytes instanceof Uint8Array ? bytes : new Uint8Array(bytes);\n  let binary = \"\";\n  for (let i = 0; i < u8.length; i++) binary += String.fromCharCode(u8.at(i)!);\n  if (typeof btoa === \"function\") return btoa(binary);\n  // @ts-ignore\n  return Buffer.from(binary, \"binary\").toString(\"base64\");\n}\n\nimport { ValidationError } from \"../errors\";\n\nexport function base64ToBytes(b64: string): Uint8Array {\n  if (typeof b64 !== \"string\" || b64.trim().length === 0) {\n    throw new ValidationError(\"Base64 input must be a non-empty string\");\n  }\n  try {\n    // normalize: remove whitespace, convert URL-safe to standard, add padding\n    const cleaned = b64.replace(/\\s+/g, \"\").replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const pad = cleaned.length % 4;\n    const normalized = pad === 0 ? cleaned : cleaned + \"=\".repeat(4 - pad);\n\n    if (typeof atob === \"function\") {\n      const binary = atob(normalized);\n      const out = new Uint8Array(binary.length);\n      for (let i = 0; i < binary.length; i++) out[i] = binary.charCodeAt(i);\n      return out;\n    }\n    // @ts-ignore\n    const buf = Buffer.from(normalized, \"base64\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  } catch {\n    throw new ValidationError(\"Invalid base64 input\");\n  }\n}",
    "import { SLS_CONSTANTS } from \"../constants\";\nimport { base64ToBytes, bytesToBase64 } from \"../utils/base64\";\nimport { CryptoError, ValidationError } from \"../errors\";\n\nfunction toArrayBuffer(u8: Uint8Array): ArrayBuffer {\n  if (u8.byteOffset === 0 && u8.byteLength === u8.buffer.byteLength && u8.buffer instanceof ArrayBuffer) {\n    return u8.buffer as ArrayBuffer;\n  }\n  return u8.slice().buffer as ArrayBuffer;\n}\n\nexport class EncryptionManager {\n  generateSaltB64(): string {\n    const salt = new Uint8Array(SLS_CONSTANTS.SALT_LEN);\n    crypto.getRandomValues(salt);\n    return bytesToBase64(salt);\n  }\n\n  async createDek(): Promise<CryptoKey> {\n    try {\n      return await crypto.subtle.generateKey(\n        { name: SLS_CONSTANTS.AES.NAME, length: SLS_CONSTANTS.AES.LENGTH },\n        true,\n        [\"encrypt\", \"decrypt\", \"wrapKey\", \"unwrapKey\"]\n      );\n    } catch (e) {\n      throw new CryptoError(`Failed to generate DEK: ${(e as Error)?.message ?? e}`);\n    }\n  }\n\n  async encryptData(key: CryptoKey, obj: unknown): Promise<{ iv: string; ciphertext: string }> {\n    try {\n      const iv = new Uint8Array(SLS_CONSTANTS.AES.IV_LENGTH);\n      crypto.getRandomValues(iv);\n      const data = new TextEncoder().encode(JSON.stringify(obj));\n      const ct = await crypto.subtle.encrypt({ name: SLS_CONSTANTS.AES.NAME, iv }, key, toArrayBuffer(data));\n      return { iv: bytesToBase64(iv), ciphertext: bytesToBase64(ct) };\n    } catch (e) {\n      throw new CryptoError(`Encryption failed: ${(e as Error)?.message ?? e}`);\n    }\n  }\n\n  async decryptData<T = unknown>(key: CryptoKey, ivB64: string, ctB64: string): Promise<T> {\n    if (!ivB64 || !ctB64) throw new ValidationError(\"IV and ciphertext are required\");\n\n    let iv: BufferSource;\n    let ct: Uint8Array;\n    try {\n      iv = base64ToBytes(ivB64) as BufferSource;\n      ct = base64ToBytes(ctB64);\n    } catch (e) {\n      throw e;\n    }\n\n    let pt: ArrayBuffer;\n    try {\n      pt = await crypto.subtle.decrypt({ name: SLS_CONSTANTS.AES.NAME, iv }, key, toArrayBuffer(ct));\n    } catch (e) {\n      throw new CryptoError(`Decryption failed: Invalid Data?`);\n    }\n\n    try {\n      return JSON.parse(new TextDecoder().decode(pt)) as T;\n    } catch {\n      throw new ValidationError(\"Decrypted data is not valid JSON\");\n    }\n  }\n\n  async unwrapDek(ivWrapB64: string, wrappedB64: string, kek: CryptoKey, forWrapping = false): Promise<CryptoKey> {\n    let iv: BufferSource;\n    let wrapped: Uint8Array;\n    try {\n      iv = base64ToBytes(ivWrapB64) as BufferSource; // may throw ValidationError\n      wrapped = base64ToBytes(wrappedB64);\n    } catch (e) {\n      throw e; // propagate ValidationError\n    }\n\n    try {\n      return await crypto.subtle.unwrapKey(\n        \"raw\",\n        toArrayBuffer(wrapped),\n        kek,\n        { name: SLS_CONSTANTS.AES.NAME, iv },\n        { name: SLS_CONSTANTS.AES.NAME, length: SLS_CONSTANTS.AES.LENGTH },\n        forWrapping,\n        forWrapping ? [\"wrapKey\", \"unwrapKey\", \"encrypt\", \"decrypt\"] : [\"encrypt\", \"decrypt\"]\n      );\n    } catch (e) {\n      throw new CryptoError(\"Key unwrapping failed. Invalid data?\");\n    }\n  }\n\n  async wrapDek(dek: CryptoKey, kek: CryptoKey): Promise<{ ivWrap: string; wrappedKey: string }> {\n    try {\n      const iv = new Uint8Array(SLS_CONSTANTS.AES.IV_LENGTH);\n      crypto.getRandomValues(iv);\n      const wrapped = await crypto.subtle.wrapKey(\"raw\", dek, kek, { name: SLS_CONSTANTS.AES.NAME, iv });\n      return { ivWrap: bytesToBase64(iv), wrappedKey: bytesToBase64(wrapped) };\n    } catch (e) {\n      throw new CryptoError(`wrapKey failed: ${(e as Error)?.message ?? e}`);\n    }\n  }\n}",
    "import { SLS_CONSTANTS } from \"../constants\";\nimport { NotSupportedError } from \"../errors\";\n\n/**\n * Persists a non-extractable AES-GCM KEK in IndexedDB (origin-bound).\n * Falls back to an in-memory key if IndexedDB is unavailable or rejects storing CryptoKey.\n */\nexport class DeviceKeyProvider {\n  private static memoryKey: CryptoKey | null = null;\n\n  static async getKey(): Promise<CryptoKey> {\n    if (this.memoryKey) return this.memoryKey;\n    if (!globalThis.indexedDB) {\n      this.memoryKey = await this.generateKek();\n      return this.memoryKey;\n    }\n\n    const db = await this.openDB().catch(() => null);\n    try {\n      if (!db) {\n        this.memoryKey = await this.generateKek();\n        return this.memoryKey;\n      }\n\n      const existing: CryptoKey | undefined = await new Promise((resolve, reject) => {\n        const tx = db.transaction(SLS_CONSTANTS.IDB.STORE, \"readonly\");\n        const req = tx.objectStore(SLS_CONSTANTS.IDB.STORE).get(SLS_CONSTANTS.IDB.ID);\n        req.onsuccess = () => resolve(req.result?.key as CryptoKey | undefined);\n        req.onerror = () => reject(req.error);\n      });\n\n      if (existing) {\n        this.memoryKey = existing;\n        return this.memoryKey;\n      }\n\n      const key = await this.generateKek();\n\n      await new Promise<void>((resolve, reject) => {\n        const tx = db.transaction(SLS_CONSTANTS.IDB.STORE, \"readwrite\");\n        const put = tx.objectStore(SLS_CONSTANTS.IDB.STORE).put({ id: SLS_CONSTANTS.IDB.ID, key });\n        put.onsuccess = () => resolve();\n        put.onerror = () => reject(put.error);\n      }).catch(() => {\n        // storing CryptoKey failed (structured clone not supported) -> memory fallback\n      });\n\n      // Prefer in-memory identity within the session\n      this.memoryKey = key;\n      return this.memoryKey;\n    } catch {\n      if (!this.memoryKey) this.memoryKey = await this.generateKek();\n      return this.memoryKey;\n    } finally {\n      if (db) db.close();\n    }\n  }\n\n  static async rotateKey(): Promise<CryptoKey> {\n    const newKey = await this.generateKek();\n    if (!globalThis.indexedDB) {\n      this.memoryKey = newKey;\n      return newKey;\n    }\n\n    const db = await this.openDB().catch(() => null);\n    try {\n      if (!db) {\n        this.memoryKey = newKey;\n        return newKey;\n      }\n      await new Promise<void>((resolve, reject) => {\n        const tx = db.transaction(SLS_CONSTANTS.IDB.STORE, \"readwrite\");\n        const put = tx.objectStore(SLS_CONSTANTS.IDB.STORE).put({ id: SLS_CONSTANTS.IDB.ID, key: newKey });\n        put.onsuccess = () => resolve();\n        put.onerror = () => reject(put.error);\n      });\n      this.memoryKey = newKey; // keep identity stable within session\n      return newKey;\n    } catch {\n      this.memoryKey = newKey;\n      return newKey;\n    } finally {\n      if (db) db.close();\n    }\n  }\n\n  static async deletePersistent(): Promise<void> {\n    this.memoryKey = null;\n   if (!globalThis.indexedDB) return;\n   \n    await new Promise<void>((resolve, reject) => {\n      const req = indexedDB.deleteDatabase(SLS_CONSTANTS.IDB.DB_NAME);\n      req.onsuccess = () => resolve();\n      req.onerror = () => reject(req.error);\n    }).catch(() => {});\n  }\n\n  private static async generateKek(): Promise<CryptoKey> {\n    return await crypto.subtle.generateKey(\n      { name: SLS_CONSTANTS.AES.NAME, length: SLS_CONSTANTS.AES.LENGTH },\n      false,\n      [\"wrapKey\", \"unwrapKey\"]\n    );\n  }\n\n  private static openDB(): Promise<IDBDatabase> {\n    return new Promise((resolve, reject) => {\n      const req = indexedDB.open(SLS_CONSTANTS.IDB.DB_NAME, 1);\n      req.onupgradeneeded = () => {\n        req.result.createObjectStore(SLS_CONSTANTS.IDB.STORE, { keyPath: \"id\" });\n      };\n      req.onsuccess = () => resolve(req.result);\n      req.onerror = () => reject(new NotSupportedError(req.error?.message ?? \"IndexedDB error\"));\n    });\n  }\n}",
    "import { SLS_CONSTANTS } from \"../constants\";\nimport { CryptoError, ValidationError } from \"../errors\";\n// No module augmentation — treat as any-typed JS module\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport * as argon2 from \"argon2-browser\";\n\nfunction toArrayBuffer(u8: Uint8Array): ArrayBuffer {\n  if (u8.byteOffset === 0 && u8.byteLength === u8.buffer.byteLength && u8.buffer instanceof ArrayBuffer) {\n    return u8.buffer as ArrayBuffer;\n  }\n  return u8.slice().buffer as ArrayBuffer;\n}\n\nexport async function deriveKekFromPassword(\n  password: string,\n  salt: Uint8Array,\n  iterations = SLS_CONSTANTS.ARGON2.ITERATIONS\n): Promise<CryptoKey> {\n  if (typeof password !== \"string\" || password.length === 0) {\n    throw new ValidationError(\"Password must be a non-empty string\");\n  }\n  if (!(salt instanceof Uint8Array) || salt.byteLength < SLS_CONSTANTS.SALT_LEN) {\n    throw new ValidationError(`Salt must be Uint8Array with length >= ${SLS_CONSTANTS.SALT_LEN}`);\n  }\n  const MAX_ITERATIONS = 64;\n  if (!Number.isInteger(iterations) || iterations < 1 || iterations > MAX_ITERATIONS) {\n    throw new ValidationError(`iterations must be an integer in [1, ${MAX_ITERATIONS}]`);\n  }\n  let result: { hash: Uint8Array };\n  try {\n    result = await argon2.hash({\n      pass: password,\n      salt,\n      time: iterations,\n      mem: SLS_CONSTANTS.ARGON2.MEMORY_KIB,\n      hashLen: SLS_CONSTANTS.ARGON2.HASH_LEN,\n      parallelism: SLS_CONSTANTS.ARGON2.PARALLELISM,\n      type: argon2.ArgonType.Argon2id\n    });\n  } catch (e) {\n    throw new CryptoError(`Argon2 derivation failed: ${(e as Error)?.message ?? e}`);\n  }\n\n  if (!result?.hash) throw new CryptoError(\"Argon2 returned no hash\");\n\n  try {\n    return await crypto.subtle.importKey(\n      \"raw\",\n      toArrayBuffer(result.hash),\n      { name: SLS_CONSTANTS.AES.NAME, length: SLS_CONSTANTS.AES.LENGTH },\n      false,\n      [\"wrapKey\", \"unwrapKey\"]\n    );\n  } catch (e) {\n    throw new CryptoError(`Failed to import derived key: ${(e as Error)?.message ?? e}`);\n  }\n}",
    "/**\n * Caches a derived KEK (CryptoKey) for master password sessions.\n * Key is non-extractable and kept only in RAM.\n */\nexport class SessionKeyCache {\n  private key: CryptoKey | null = null;\n  private saltB64: string | null = null;\n  private rounds: number | null = null;\n\n  set(key: CryptoKey, saltB64: string, rounds: number) {\n    this.key = key;\n    this.saltB64 = saltB64;\n    this.rounds = rounds;\n  }\n\n  match(saltB64: string, rounds: number): CryptoKey | null {\n    if (!this.key) return null;\n    if (this.saltB64 === saltB64 && this.rounds === rounds) return this.key;\n    return null;\n  }\n\n  clear() {\n    this.key = null;\n    this.saltB64 = null;\n    this.rounds = null;\n  }\n}",
    "import { SLS_CONSTANTS } from \"../constants\";\nimport { PersistedConfigV2 } from \"../types\";\nimport { StorageFullError } from \"../errors\";\n\nfunction estimateBytes(s: string): number {\n  try { return new Blob([s]).size; } catch { return s.length; }\n}\n\nexport class StorageService {\n  private key: string;\n\n  constructor(key: string = SLS_CONSTANTS.STORAGE_KEY) {\n    this.key = key;\n  }\n\n  get(): PersistedConfigV2 | null {\n    const raw = localStorage.getItem(this.key);\n    if (!raw) return null;\n    try { return JSON.parse(raw) as PersistedConfigV2; } catch { return null; }\n  }\n\n  _isQuotaExceeded(err: unknown): boolean {\n    const e = err as { name?: string; code?: number; message?: string };\n    return e?.name === \"QuotaExceededError\" ||\n          e?.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\n          typeof e?.message === \"string\" && /quota/i.test(e.message) ||\n          e?.code === 22 || e?.code === 1014; // Safari/Firefox DOMException codes\n  }\n\n  set(cfg: PersistedConfigV2): void {\n    const serialized = JSON.stringify(cfg);\n    try {\n      localStorage.setItem(this.key, serialized);\n      const check = localStorage.getItem(this.key);\n      if (check !== serialized) throw new StorageFullError(\"Failed to persist data\");\n    } catch (e) {\n      if (this._isQuotaExceeded(e)) {\n        throw new StorageFullError(`localStorage quota exceeded (${estimateBytes(serialized)} bytes)`);\n      }\n      const msg = (e as Error)?.message ?? String(e);\n      throw new StorageFullError(`Failed to persist data: ${msg}`);\n    }\n  }\n\n  clear(): void {\n    try { localStorage.removeItem(this.key); } catch { /* ignore */ }\n  }\n}",
    "import { ValidationError } from \"../errors\";\n\n/**\n * Ensures a value is JSON-serializable (no functions / symbols / circular refs).\n * Returns a deep-cloned plain JSON object.\n */\nexport function toPlainJson<T>(value: T): T {\n  const seen = new WeakSet<object>();\n  const replacer = (_key: string, v: unknown) => {\n    const t = typeof v;\n    if (t === \"function\" || t === \"symbol\") {\n      throw new ValidationError(\"Data must be JSON-serializable (no functions/symbols)\");\n    }\n    if (v && t === \"object\") {\n      const o = v as object;\n      if (seen.has(o)) {\n        throw new ValidationError(\"Data must be JSON-serializable (no circular references)\");\n      }\n      seen.add(o);\n    }\n    return v;\n  };\n\n  try {\n    return JSON.parse(JSON.stringify(value, replacer)) as T;\n  } catch (e) {\n    if (e instanceof ValidationError) throw e;\n    throw new ValidationError(\"Data must be JSON-serializable\");\n  }\n}\n\nexport function safeParseJson<T>(text: string): T {\n  try {\n    return JSON.parse(text) as T;\n  } catch {\n    throw new ValidationError(\"Invalid JSON input\");\n  }\n}\n",
    "import { LockedError, ValidationError } from \"../errors\";\n\nexport type SecureDataView<T extends Record<string, unknown>> = T & {\n  clear(): void;\n};\n\nexport function makeSecureDataView<T extends Record<string, unknown>>(payloadIn: T): SecureDataView<T> {\n  let cleared = false;\n  let payload: T = payloadIn;\n  let nestedCache: WeakMap<object, object> = new WeakMap<object, object>(); // <-- make it reassignable\n\n  function clear(): void {\n    const overwrite = (obj: unknown) => {\n      if (!obj || typeof obj !== \"object\") return;\n      const rec = obj as Record<string, unknown>;\n      for (const key of Object.keys(rec)) {\n        const v = rec[key];\n        if (v && typeof v === \"object\") overwrite(v);\n        rec[key] = null;\n      }\n    };\n    overwrite(payload);\n    cleared = true;\n    payload = {} as T;\n    nestedCache = new WeakMap<object, object>();\n  }\n\n  const readonlyError = () => new ValidationError(\"SecureDataView is read-only; mutate via setData()\");\n\n  const wrapNested = (obj: unknown): unknown => {\n    if (!obj || typeof obj !== \"object\") return obj;\n    const cached = nestedCache.get(obj);\n    if (cached) return cached;\n\n    const proxied = new Proxy(obj as Record<string, unknown>, {\n      get(target, prop: string | symbol) {\n        if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const v = (target as any)[prop];\n        return typeof v === \"object\" && v !== null ? wrapNested(v) : v;\n      },\n      set() { throw readonlyError(); },\n      defineProperty() { throw readonlyError(); },\n      deleteProperty() { throw readonlyError(); },\n      ownKeys(target) {\n        if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n        return Reflect.ownKeys(target);\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n        if (Object.prototype.hasOwnProperty.call(target, prop)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          const value = (target as any)[prop];\n          return { configurable: true, enumerable: true, writable: false, value };\n        }\n        return undefined;\n      },\n      has(target, prop) {\n        if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n        return Reflect.has(target, prop);\n      }\n    });\n\n    nestedCache.set(obj, proxied);\n    return proxied;\n  };\n\n  const handler: ProxyHandler<Record<string, unknown>> = {\n    get(_, prop: string | symbol) {\n      if (prop === \"clear\") return clear;\n      if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const v = (payload as any)[prop];\n      return typeof v === \"object\" && v !== null ? wrapNested(v) : v;\n    },\n    set() { throw readonlyError(); },\n    defineProperty() { throw readonlyError(); },\n    deleteProperty() { throw readonlyError(); },\n    ownKeys() {\n      if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n      return [...Object.keys(payload), \"clear\"];\n    },\n    getOwnPropertyDescriptor(_, prop: string | symbol) {\n      if (prop === \"clear\") return { configurable: true, enumerable: true, writable: false, value: clear };\n      if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n      if (Object.prototype.hasOwnProperty.call(payload, prop)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const value = (payload as any)[prop];\n        return { configurable: true, enumerable: true, writable: false, value };\n      }\n      return undefined;\n    },\n    has(_, prop) {\n      if (prop === \"clear\") return true;\n      if (cleared) throw new LockedError(\"Decrypted data was cleared\");\n      return Object.prototype.hasOwnProperty.call(payload, prop);\n    }\n  };\n\n  return new Proxy<Record<string, unknown>>({} as never, handler) as SecureDataView<T>;\n}",
    "import { EncryptionManager } from \"../crypto/EncryptionManager\";\nimport { DeviceKeyProvider } from \"../crypto/DeviceKeyProvider\";\nimport { deriveKekFromPassword } from \"../crypto/KeyDerivation\";\nimport { SessionKeyCache } from \"../crypto/SessionKeyCache\";\nimport { SLS_CONSTANTS } from \"../constants\";\nimport { StorageService } from \"../storage/StorageService\";\nimport type { PersistedConfigV2 } from \"../types\";\nimport { base64ToBytes } from \"../utils/base64\";\nimport { toPlainJson } from \"../utils/json\";\nimport { makeSecureDataView, SecureDataView } from \"../utils/secureDataView\";\nimport {\n  CryptoError,\n  ExportError,\n  ImportError,\n  LockedError,\n  ModeError,\n  ValidationError\n} from \"../errors\";\n\nexport interface SecureLocalStorageOptions {\n  /** Override the localStorage key (for multi-tenant apps or tests). */\n  storageKey?: string;\n}\n\nexport class SecureLocalStorage {\n  private readonly store: StorageService;\n  private readonly enc = new EncryptionManager();\n  private readonly session = new SessionKeyCache();\n  private config: PersistedConfigV2 | null = null;\n  private dek: CryptoKey | null = null;\n  private ready: Promise<void>;\n\n  constructor(opts?: SecureLocalStorageOptions) {\n    this.store = new StorageService(opts?.storageKey);\n    this.ready = this.initialize();\n  }\n\n  // --------------------------- public API ---------------------------\n\n  public isUsingMasterPassword(): boolean {\n    return (this.config?.header.rounds ?? 1) > 1;\n  }\n\n\n  /** Unlock session with master password (no-op in device mode). */\n  async unlock(masterPassword: string): Promise<void> {\n    await this.ready;\n    if (!this.config) throw new ImportError(\"No data to unlock\");\n    if (!this.isUsingMasterPassword()) return; // already unlocked in device mode\n\n    const { salt, rounds } = this.config.header;\n    const kek = await deriveKekFromPassword(masterPassword, base64ToBytes(salt), rounds);\n    try {\n      this.session.set(kek, salt, rounds);\n      await this.unwrapDekWithKek(kek, false);\n    } catch {\n      this.session.clear();\n      throw new ValidationError(\"Invalid master password\");\n    }\n  }\n\n  /** Set a master password (switch from device mode to master mode). */\n  async setMasterPassword(masterPassword: string): Promise<void> {\n    await this.ready;\n    this.requireConfig();\n    if (this.isUsingMasterPassword()) {\n      throw new ModeError(\"Master password already set; use rotateMasterPassword()\");\n    }\n    if (typeof masterPassword !== \"string\" || masterPassword.length === 0) {\n      throw new ValidationError(\"masterPassword must be a non-empty string\");\n    }\n    // Unwrap existing DEK for wrapping using device KEK\n    const deviceKek = await DeviceKeyProvider.getKey();\n    await this.unwrapDekWithKek(deviceKek, true);\n\n    const saltB64 = this.enc.generateSaltB64();\n    const kek = await deriveKekFromPassword(masterPassword, base64ToBytes(saltB64));\n    const wrapped = await this.enc.wrapDek(this.dek!, kek);\n\n    // Update header to master mode\n    this.config!.header = {\n      v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n      salt: saltB64,\n      rounds: SLS_CONSTANTS.ARGON2.ITERATIONS,\n      iv: wrapped.ivWrap,\n      wrappedKey: wrapped.wrappedKey\n    };\n\n    // Keep session unlocked (cache kek) and unwrap DEK for use\n    this.session.set(kek, saltB64, SLS_CONSTANTS.ARGON2.ITERATIONS);\n    this.dek = await this.enc.unwrapDek(wrapped.ivWrap, wrapped.wrappedKey, kek, false);\n    this.persist();\n  }\n\n  /** Remove master password, re-wrapping DEK with device-bound KEK. Requires unlocked session. */\n  async removeMasterPassword(): Promise<void> {\n    await this.ready;\n    this.requireConfig();\n    if (!this.isUsingMasterPassword()) throw new ModeError(\"No master password is set\");\n    this.requireUnlocked();\n\n    const deviceKek = await DeviceKeyProvider.getKey();\n    // Ensure DEK is extractable for wrap\n    await this.unwrapDekWithKek(this.sessionKekOrThrow(), true);\n    const { ivWrap, wrappedKey } = await this.enc.wrapDek(this.dek!, deviceKek);\n\n    this.config!.header = {\n      v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n      salt: \"\",\n      rounds: 1,\n      iv: ivWrap,\n      wrappedKey\n    };\n\n    // In device mode, keep DEK unwrapped for convenience\n    this.dek = await this.enc.unwrapDek(ivWrap, wrappedKey, deviceKek, false);\n    this.session.clear(); // no master kek required now\n    this.persist();\n  }\n\n  /** Rotate master password atomically. */\n  async rotateMasterPassword(oldMasterPassword: string, newMasterPassword: string): Promise<void> {\n    await this.ready;\n    this.requireConfig();\n\n    if (typeof newMasterPassword !== \"string\" || newMasterPassword.length === 0) {\n      throw new ValidationError(\"newMasterPassword must be a non-empty string\");\n    }\n\n    if (!this.isUsingMasterPassword()) {\n      // unlock() is a no-op in device mode\n      await this.unlock(oldMasterPassword);\n      await this.setMasterPassword(newMasterPassword);\n      return;\n    }\n\n    await this.unlock(oldMasterPassword);\n    this.requireUnlocked();\n\n    await this.unwrapDekWithKek(this.sessionKekOrThrow(), true);\n\n    const saltB64 = this.enc.generateSaltB64();\n    const rounds = SLS_CONSTANTS.ARGON2.ITERATIONS;\n    const newKek = await deriveKekFromPassword(newMasterPassword, base64ToBytes(saltB64), rounds);\n    const { ivWrap, wrappedKey } = await this.enc.wrapDek(this.dek!, newKek);\n\n    this.config!.header = {\n      v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n      salt: saltB64,\n      rounds,\n      iv: ivWrap,\n      wrappedKey\n    };\n\n    this.session.set(newKek, saltB64, rounds);\n    this.dek = await this.enc.unwrapDek(ivWrap, wrappedKey, newKek, false);\n\n    this.persist();\n  }\n\n  /** Lock the session (clears derived KEK & DEK from memory). */\n  lock(): void {\n    this.session.clear();\n    this.dek = null;\n  }\n\n  /** Rotate DEK and device KEK. Allowed only in password-less mode. */\n  async rotateKeys(): Promise<void> {\n    await this.ready;\n    this.requireConfig();\n    if (this.isUsingMasterPassword()) {\n      throw new ModeError(\"rotateKeys is allowed only in password-less mode\");\n    }\n    const deviceKek = await DeviceKeyProvider.getKey();\n    // Unwrap current DEK to read & re-encrypt data\n    await this.unwrapDekWithKek(deviceKek, false);\n    const plain = await this.enc.decryptData<Record<string, unknown>>(\n      this.dek!,\n      this.config!.data.iv,\n      this.config!.data.ciphertext\n    );\n\n    // Generate new DEK and new device KEK, re-encrypt data\n    const newDek = await this.enc.createDek();\n    const { iv, ciphertext } = await this.enc.encryptData(newDek, plain);\n\n    const newDeviceKek = await DeviceKeyProvider.rotateKey();\n    const { ivWrap, wrappedKey } = await this.enc.wrapDek(newDek, newDeviceKek);\n\n    this.config!.header = {\n      v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n      salt: \"\",\n      rounds: 1,\n      iv: ivWrap,\n      wrappedKey\n    };\n    this.config!.data = { iv, ciphertext };\n\n    // Keep session convenient (unwrapped in memory)\n    this.dek = await this.enc.unwrapDek(ivWrap, wrappedKey, newDeviceKek, false);\n\n    // Clear plaintext copy\n    for (const k of Object.keys(plain)) (plain as Record<string, unknown>)[k] = null;\n\n    this.persist();\n  }\n\n  /** Get decrypted data as a wipeable view object. */\n  async getData<T extends Record<string, unknown> = Record<string, unknown>>(): Promise<SecureDataView<T>> {\n    await this.ready;\n    this.requireConfig();\n    await this.ensureDekLoaded();\n    if (!this.config!.data.iv || !this.config!.data.ciphertext) {\n      // empty object\n      return makeSecureDataView({} as T);\n    }\n    const obj = await this.enc.decryptData<unknown>(this.dek!, this.config!.data.iv, this.config!.data.ciphertext);\n    if (!obj || typeof obj !== \"object\" || Array.isArray(obj)) {\n      throw new ValidationError(\"Stored data must be a plain object\");\n    }\n    return makeSecureDataView(obj as T);\n  }\n\n  /** Replace data with the provided plain object. */\n  async setData<T extends Record<string, unknown>>(value: T): Promise<void> {\n    await this.ready;\n    this.requireConfig();\n    await this.ensureDekLoaded();\n    const plain = toPlainJson(value);\n    const { iv, ciphertext } = await this.enc.encryptData(this.dek!, plain);\n    this.config!.data = { iv, ciphertext };\n    this.persist();\n  }\n\n  /**\n   * Export the encrypted bundle as JSON string.\n   * - If `customExportPassword` provided: derive export KEK (Argon2id) and rewrap DEK accordingly (mPw=false).\n   * - If absent and in master mode: exports current config wrapped with master password (mPw=true).\n   */\n  async exportData(customExportPassword?: string): Promise<string> {\n    await this.ready;\n    this.requireConfig();\n\n    if (!customExportPassword && this.isUsingMasterPassword()) {\n      const copy = structuredClone(this.config!);\n      copy.header.mPw = true;\n      return JSON.stringify(copy);\n    }\n\n    if (!customExportPassword && !this.isUsingMasterPassword()) {\n      throw new ExportError(\"Export password required in device mode\");\n    }\n\n    try {\n      // Re-wrap DEK with export KEK\n      const exportSaltB64 = this.enc.generateSaltB64();\n      const exportKek = await deriveKekFromPassword(customExportPassword!, base64ToBytes(exportSaltB64));\n\n      // Unwrap current DEK for wrapping using active KEK\n      if (this.isUsingMasterPassword()) {\n        await this.unwrapDekWithKek(this.sessionKekOrThrow(), true);\n      } else {\n        const deviceKek = await DeviceKeyProvider.getKey();\n        await this.unwrapDekWithKek(deviceKek, true);\n      }\n\n      const { ivWrap, wrappedKey } = await this.enc.wrapDek(this.dek!, exportKek);\n      const bundle: PersistedConfigV2 = {\n        header: {\n          v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n          salt: exportSaltB64,\n          rounds: SLS_CONSTANTS.ARGON2.ITERATIONS,\n          iv: ivWrap,\n          wrappedKey,\n          mPw: false\n        },\n        data: this.config!.data\n      };\n      return JSON.stringify(bundle);\n    } catch (e) {\n      throw new ExportError((e as Error)?.message ?? \"Export failed\");\n    }\n  }\n\n  /**\n   * Import previously exported JSON.\n   * - If bundle.mPw===true OR header.rounds>1 and no mPw flag: expects master password.\n   * - Else expects export password.\n   * After import, rewrap to device mode if using export password.\n   */\n  async importData(serialized: string, password?: string): Promise<void> {\n    await this.ready;\n    let bundle: PersistedConfigV2;\n    try {\n      bundle = JSON.parse(serialized) as PersistedConfigV2;\n    } catch {\n      throw new ImportError(\"Invalid import JSON\");\n    }\n\n    if (bundle.header.v !== SLS_CONSTANTS.CURRENT_DATA_VERSION) {\n      throw new ImportError(`Unsupported export version ${bundle.header.v}`);\n    }\n\n    const isMasterProtected = bundle.header.mPw === true || (bundle.header.rounds > 1 && bundle.header.mPw !== false);\n    if (isMasterProtected) {\n      if (!password) throw new ImportError(\"Master password required to import\");\n      // Validate master password by trying to unwrap\n      const kek = await deriveKekFromPassword(password, base64ToBytes(bundle.header.salt), bundle.header.rounds);\n      try {\n        // test unwrap (non-extractable)\n        await this.enc.unwrapDek(bundle.header.iv, bundle.header.wrappedKey, kek, false);\n      } catch {\n        throw new ImportError(\"Invalid master password\");\n      }\n      // Accept bundle as-is (master mode)\n      this.config = bundle;\n      this.dek = null; // locked until unlock()\n      this.session.clear();\n      this.persist();\n      return;\n    }\n\n    if (!password) throw new ImportError(\"Export password required to import\");\n\n    try {\n      const exportKek = await deriveKekFromPassword(password, base64ToBytes(bundle.header.salt), bundle.header.rounds);\n      const extractableDek = await this.enc.unwrapDek(bundle.header.iv, bundle.header.wrappedKey, exportKek, true);\n      const deviceKek = await DeviceKeyProvider.getKey();\n      const { ivWrap, wrappedKey } = await this.enc.wrapDek(extractableDek, deviceKek);\n\n      // Store bundle in device mode\n      this.config = {\n        header: {\n          v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n          salt: \"\",\n          rounds: 1,\n          iv: ivWrap,\n          wrappedKey\n        },\n        data: bundle.data\n      };\n      // Keep session unlocked for convenience\n      this.dek = await this.enc.unwrapDek(ivWrap, wrappedKey, deviceKek, false);\n      this.session.clear();\n      this.persist();\n    } catch (e) {\n      throw new ImportError(\"Invalid export password or corrupted export data\");\n    }\n  }\n\n  /** Clear all data (localStorage + IndexedDB KEK) and reinitialize fresh empty store in device mode. */\n  async clear(): Promise<void> {\n    await this.ready;\n    this.session.clear();\n    this.dek = null;\n    this.store.clear();\n    await DeviceKeyProvider.deletePersistent();\n    await this.initialize(true);\n  }\n\n  // --------------------------- private helpers ---------------------------\n\n  private async initialize(forceFresh = false): Promise<void> {\n    const isValidConfig = (cfg: PersistedConfigV2 | null): cfg is PersistedConfigV2 => {\n      if (!cfg) return false;\n      const h = cfg.header;\n      const d = cfg.data;\n      if (!h || h.v !== SLS_CONSTANTS.CURRENT_DATA_VERSION) return false;\n      if (typeof h.rounds !== \"number\" || h.rounds < 1) return false;\n      if (typeof h.iv !== \"string\" || typeof h.wrappedKey !== \"string\") return false;\n      if (!d || typeof d.iv !== \"string\" || typeof d.ciphertext !== \"string\") return false;\n\n      if (h.rounds === 1) {\n        if (h.salt !== \"\") return false;\n      } else {\n        if (typeof h.salt !== \"string\" || h.salt.length === 0) return false;\n      }\n\n      try {\n        base64ToBytes(h.iv);\n        base64ToBytes(h.wrappedKey);\n        if (d.iv) base64ToBytes(d.iv);\n        if (d.ciphertext) base64ToBytes(d.ciphertext);\n      } catch {\n        return false;\n      }\n      return true;\n    };\n\n    // If we are forced fresh, build a new device-mode store immediately.\n    if (forceFresh) {\n      const dek = await this.enc.createDek();\n      const deviceKek = await DeviceKeyProvider.getKey();\n      const { ivWrap, wrappedKey } = await this.enc.wrapDek(dek, deviceKek);\n      const unwrappedDek = await this.enc.unwrapDek(ivWrap, wrappedKey, deviceKek, false);\n      const { iv, ciphertext } = await this.enc.encryptData(unwrappedDek, {}); // empty object\n\n      this.config = {\n        header: {\n          v: SLS_CONSTANTS.CURRENT_DATA_VERSION,\n          salt: \"\",\n          rounds: 1,\n          iv: ivWrap,\n          wrappedKey\n        },\n        data: { iv, ciphertext }\n      };\n      this.dek = unwrappedDek;\n      this.persist();\n      return;\n    }\n\n    const existing = this.store.get();\n    if (!isValidConfig(existing)) {\n      await this.initialize(true);\n      return;\n    }\n\n    this.config = existing;\n\n    // Auto-unlock in device mode\n    if (!this.isUsingMasterPassword()) {\n      const deviceKek = await DeviceKeyProvider.getKey();\n      try {\n        this.dek = await this.enc.unwrapDek(existing.header.iv, existing.header.wrappedKey, deviceKek, false);\n      } catch {\n        throw new ValidationError(\"Failed to unwrap DEK using device key. Tampered data?\");\n        // Cannot unwrap with current device KEK -> start fresh\n        // await this.initialize(true);\n      }\n    }\n  }\n\n  private persist(): void {\n    this.store.set(this.config!);\n  }\n  \n  private requireConfig(): void {\n    if (!this.config) throw new ImportError(\"No configuration present\");\n  }\n\n  private requireUnlocked(): void {\n    if (!this.dek) throw new LockedError();\n  }\n\n  private sessionKekOrThrow(): CryptoKey {\n    const { salt, rounds } = this.config!.header;\n    const kek = this.session.match(salt, rounds);\n    if (!kek) throw new LockedError(\"Session locked.\");\n    return kek;\n  }\n\n  private async ensureDekLoaded(): Promise<void> {\n    if (this.dek) return;\n    if (this.isUsingMasterPassword()) {\n      const kek = this.sessionKekOrThrow();\n      await this.unwrapDekWithKek(kek, false);\n    } else {\n      const deviceKek = await DeviceKeyProvider.getKey();\n      await this.unwrapDekWithKek(deviceKek, false);\n    }\n  }\n\n  private async unwrapDekWithKek(kek: CryptoKey, forWrapping: boolean): Promise<void> {\n    this.dek = await this.enc.unwrapDek(this.config!.header.iv, this.config!.header.wrappedKey, kek, forWrapping);\n  }\n}",
    "import { SecureLocalStorage, type SecureLocalStorageOptions } from \"./api/SecureLocalStorage\";\n\nexport type { SecureLocalStorageOptions } from \"./api/SecureLocalStorage\";\nexport { SecureLocalStorage } from \"./api/SecureLocalStorage\";\n\n/**\n * Factory per your API:\n *\n * ```ts\n * const sls = secureLocalStorage(); // init\n * await sls.setData({ value1: 123 });\n * ```\n */\nexport default function secureLocalStorage(opts?: SecureLocalStorageOptions): SecureLocalStorage {\n  return new SecureLocalStorage(opts);\n}"
  ],
  "mappings": "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",
  "debugId": "74A0EFA36EE5A12D64756E2164756E21",
  "names": []
}